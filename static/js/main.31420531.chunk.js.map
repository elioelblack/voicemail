{"version":3,"sources":["TableMail/tablemail.module.css","Services/voiceMailService.js","TableMail/tablemail.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","credentials","config","headers","fetch","id","obj","axios","post","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","alert","width","marginTop","container_dialog","display","flexWrap","formControl","margin","minWidth","selectEmpty","progress","useStyles2","marginBottom","table","visuallyHidden","border","clip","height","overflow","position","top","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","onChange","inputProps","style","map","headCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","useToolbarStyles","paddingLeft","paddingRight","highlight","type","main","backgroundColor","lighten","light","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","className","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","Tablemail","succsessMessage","toast","success","POSITION","TOP_CENTER","errorMessage","error","handleRequestSort","isAsc","state","setState","handleSelectAllClick","target","newSelecteds","dataVoicemail","n","name","selected","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","parseInt","value","handleChangeDense","dense","handleChange","e","voicemailSelected","handleClickOpen","callApi","open","handleClose","selectVoicemail","isSelected","dataArray","isLoading","this","data","vmService","retrieveMessageId","then","result","catch","err","retrieveAllVmBoxes","res","json","tempArray","cn","ix","sec","push","media_id","folder","caller_id_name","String","to","substring","console","temp","dt","from","duration","callMessageId","document","getElementsByName","previousSibling","emptyRows","Math","min","role","Grid","container","item","xs","sm","Button","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","FormControl","Select","native","input","Input","DialogActions","disabled","LinearProgress","Paper","TableContainer","Table","aria-labelledby","size","bind","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","row","isItemSelected","labelId","hover","aria-checked","tabIndex","scope","InputLabel","handleChangeStatus","readOnly","MenuItem","FormHelperText","messageResult","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","FormControlLabel","control","Switch","Component","App","Fragment","CssBaseline","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.31420531.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MuiToolbar-root\":\"tablemail_MuiToolbar-root__3gNI6\"};","import fetch2 from 'node-fetch';\nimport axios from 'axios';\nconst serverUrl = 'http://localhost:8080/voicemail/messages';\nconst ACCOUNT_ID = '4642e64040cdb8b89c310a21a07c7f62';\nconst VM_BOX_ID = 'b37675a2d7b90d60f0ee5d4175502394';\nconst credentials = 'NDY0MmU2NDA0MGNkYjhiODljMzEwYTIxYTA3YzdmNjI6MjMyNjQxNTY1OTA3NWU3NTAwMGNlY2Q3YmNiZjM3NTY=';\n\n\nconst headers = {\n    Authorization: `Basic ${credentials}`,\n    'Access-Control-Allow-Origin': '*',\n    'Content-Type': 'application/json'\n};\nvar config = {\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': \"Basic \" + credentials,\n        'Access-Control-Allow-Origin': '*',\n        \n        \n    }\n};\nclass VoicemailService {\n\n    retrieveAllSchemas() {\n        // console.log(`${API_URL}/courses`,config);\n        return fetch(`${serverUrl}/schemas`);\n    }\n    retrieveAllVmBoxes() {\n        //return axios.get(`http://localhost:8080/voicemail/messages`);\n        return fetch(`https://eliotest-heroku-spring.herokuapp.com/voicemail/messages`);\n        //return axios.get(`${serverUrl}/accounts/${ACCOUNT_ID}/vmboxes/${VM_BOX_ID}/messages`,config);\n        //return fetch(`http://localhost:8080/voicemail/messages`);\n    }\n    retrieveMessageId(id,obj) {\n        //return axios.get(`http://localhost:8080/voicemail/messages`);\n        //return fetch(`https://eliotest-heroku-spring.herokuapp.com/voicemail/messages`);\n        return axios.post(`https://sandbox.2600hz.com:8443/v2/accounts/${ACCOUNT_ID}/vmboxes/${VM_BOX_ID}/messages/${id}`,obj,config);\n        //return axios.post(`http://localhost:8080/voicemail/toko/${id}`,obj);\n    }\n}\n\nexport default new VoicemailService();","import React, { Component } from 'react';\nimport './tablemail.module.css';\nimport Grid from '@material-ui/core/Grid';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport vmService from '../Services/voiceMailService';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from '@material-ui/core/Input';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    alert: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: theme.spacing(2),\n        },\n      },\n    container_dialog: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n    progress: {\n    width: '100%',\n    '& > * + *': {\n        marginTop: theme.spacing(2),\n    },\n    },\n}));\nconst useStyles2 = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n/*/////////Definicion de la tabla//////////**/\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    { id: 'folder', numeric: false, disablePadding: true, label: 'Status' },\n    { id: 'from', numeric: true, disablePadding: false, label: 'From' },\n    { id: 'to', numeric: true, disablePadding: false, label: 'To' },\n    { id: 'duration', numeric: true, disablePadding: false, label: 'Duration' },\n];\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n    //alert(classes)\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                        style={{display:'none'}}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                ''\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n        color:'#F5F5F5'\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected } = props;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n            style={{backgroundColor:'darkcyan'}}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} selected\n          </Typography>\n            ) : (\n                    <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                        VoiceMail\n                    </Typography>\n                )}\n\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : (\n                    <Tooltip title=\"Filter list\">\n                        <IconButton aria-label=\"filter list\">\n                            <FilterListIcon />\n                        </IconButton>\n                    </Tooltip>\n                )}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\n/****************Clase principal ********************/\nexport default class Tablemail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            order: 'asc',\n            orderBy: 'folder',\n            selected: [],\n            page: 0,\n            dense: false,\n            rowsPerPage: 5,\n            dataVoicemail:[],\n            dataArray:{},\n            isLoading:false,\n            open:false,\n            voicemailSelected:'new',\n            errorMessage:''\n        }\n    }\n    succsessMessage = (alert) => {\n        toast.success(alert, {\n            position: toast.POSITION.TOP_CENTER,\n        });\n    }\n    errorMessage = (alert) => {\n        toast.error(alert, {\n            position: toast.POSITION.TOP_CENTER,\n        });\n    }\n    //*********Llamadas http****** */\n    \n    componentDidMount(){\n        this.setState({isLoading:true});\n        this.handleClickOpen();\n        //this.callApi();\n        \n    }\n    callMessageId(id,data){\n        vmService.retrieveMessageId(id,data)       \n        .then(\n            (result)=>{\n                //this.callApi();\n                this.setState({isLoading:false});\n                this.setState({\n                    errorMessage:\"\"\n                })\n                this.succsessMessage(\"Modified Succsessfuly\");\n            }\n        ).catch(\n            err=>{\n                this.setState({isLoading:false});\n                this.errorMessage(\"Oh! There is an error: \"+err);\n                this.setState({\n                    errorMessage:\"CORS ERROR: please install extension Acces control Origin: CORS.\"\n                })\n            }\n        )\n    }\n    callApi(){\n        vmService.retrieveAllVmBoxes()\n        .then(res => res.json())\n        .then(\n            (result) => {\n            //console.log(result);\n            this.setState({dataArray:result});\n            let tempArray=[];\n            this.state.dataArray.data.map(\n                \n                (cn,ix) =>{\n                    //format time, I think is mileseconds, it is no in documentation                                       \n                    let sec = ((cn.length/1000));\n                    tempArray.push(                        \n                        {\n                            media_id:cn.media_id,\n                            \"folder\":cn.folder,\n                            \"from\":cn.caller_id_name,\n                            \"to\":String(cn.to).substring(0,String(cn.to).indexOf(\"@\")),\n                            \"duration\":sec+\" Seconds\"\n                        }\n                    ) \n                    \n                }\n            )\n                    \n                    this.setState({dataVoicemail:tempArray});\n                    this.setState({isLoading:false});\n                    //console.log(this.state.dataVoicemail[0].folder);\n            },\n            // Nota: es importante manejar errores aquí y no en \n            // un bloque catch() para que no interceptemos errores\n            // de errores reales en los componentes.\n            (error) => {\n                this.setState({isLoading:false});\n                console.error(error);\n            }\n        )\n    }\n    /**********Fin llamadas http*** */\n    handleRequestSort = (event, property) => {\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\n        this.setState({\n            order: isAsc ? 'desc' : 'asc',\n            orderBy: property\n        })\n    };\n\n    handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = this.state.dataVoicemail.map((n) => n.name);\n            this.setState({\n                selected: newSelecteds\n            })\n            return;\n        }\n        this.setState({\n            selected: []\n        })\n    };\n\n    handleClick = (event, name) => {\n        const selectedIndex = this.state.selected.indexOf(name);\n        let newSelected = [];\n        let selected = this.state.selected;\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n        this.setState({\n            selected: newSelected\n        })\n    };\n\n    handleChangePage = (event, newPage) => {\n        this.setState({\n            page: newPage\n        })\n\n    };\n\n    handleChangeRowsPerPage = (event) => {\n        this.setState({\n            rowsPerPage: parseInt(event.target.value, 10)\n        })\n        this.setState({\n            page: 0\n        })\n    };\n\n    handleChangeDense = (event) => {\n        this.setState({\n            dense: event.target.checked\n        })\n    };\n    handleChangeStatus(e){\n        this.setState({isLoading:true});\n        let data = {data:{\"folder\":e.target.value}};        \n        let temp = [];\n        this.state.dataVoicemail.map(\n            dt=>{\n                temp.push(\n                    {\n                        media_id:dt.media_id,\n                        folder:(dt.media_id===e.target.name)?e.target.value:dt.folder,\n                        from:dt.from,\n                        to:dt.to,\n                        duration:dt.duration\n                        \n                }\n                    \n                );\n                \n            }\n        );\n        this.callMessageId(e.target.name,data);\n        document.getElementsByName(e.target.name)[0].previousSibling.style.color=\"green\";\n        this.setState({dataVoicemail:temp});\n    }\n    handleChange = (e) => {\n        this.setState({\n            voicemailSelected:e.target.value\n        })\n    };\n    \n    handleClickOpen = () => {\n        this.callApi();\n        this.setState({open:true});\n    };\n    \n    handleClose = () => {\n        this.selectVoicemail();\n        this.setState({open:false});\n    };\n    selectVoicemail(){\n        let temp = [];\n        this.state.dataVoicemail.map(\n            dt=>{\n                if(dt.folder===this.state.voicemailSelected){\n                    temp.push(dt);\n                }\n            }\n        )\n        this.setState({\n            dataVoicemail:temp\n        })\n    }\n    \n\n    isSelected = (name) => this.state.selected.indexOf(name) !== -1;\n\n    render() {\n        let emptyRows = this.state.rowsPerPage - Math.min(this.state.rowsPerPage, this.state.dataVoicemail.length - this.state.page * this.state.rowsPerPage);\n        return (\n            <>\n                \n                    {\n                        (this.state.errorMessage!==\"\"&&\n                        <div style={{marginTop:15}} className=\"alert alert-danger\" role=\"alert\">\n                        {this.state.errorMessage}\n                        </div>)\n                    }                               \n                \n                <h1>Welcome</h1>\n                <Grid container spacing={1}>\n                    <Grid item xs={12} sm={12}>\n                    <div>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>Select voicemail</Button>\n                    <Dialog disableBackdropClick disableEscapeKeyDown open={this.state.open} onClose={this.handleClose}>\n                        <DialogTitle>Select voicemail to open</DialogTitle>\n                        <DialogContent>\n                        <form className={useStyles.container_dialog}>\n                            <FormControl className={useStyles.formControl} style={{width:'100%'}}>\n                            <Select\n                                native\n                                value={this.state.voicemailSelected}\n                                onChange={this.handleChange}\n                                input={<Input id=\"demo-dialog-native\" />}\n                            >\n                                \n                                <option value={\"new\"}>New</option>\n                                <option value={\"saved\"}>Saved</option>\n                                <option value={\"deleted\"}>Deleted</option>\n                            </Select>\n                            </FormControl>                            \n                        </form>\n                        </DialogContent>\n                        <DialogActions>\n                        <Button disabled onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Ok\n                        </Button>\n                        </DialogActions>\n                    </Dialog>\n                    </div>\n                    </Grid>\n                </Grid>\n                {\n                    (this.state.isLoading &&\n                        <div className={useStyles.progress}>\n                            <LinearProgress />\n                            <LinearProgress color=\"secondary\" />\n                        </div>)\n                }\n                \n                <div className={useStyles.root}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12} sm={12}>\n                            <div className={useStyles2.root}>\n                                <Paper className={useStyles2.paper} >\n                                    <EnhancedTableToolbar numSelected={this.state.selected.length} />\n                                    <TableContainer>\n                                        <Table\n                                            className={useStyles2.table}\n                                            aria-labelledby=\"tableTitle\"\n                                            size={this.state.dense ? 'small' : 'medium'}\n                                            aria-label=\"enhanced table\"\n                                        >\n                                            <EnhancedTableHead\n                                                classes={useStyles2}\n                                                numSelected={this.state.selected.length}\n                                                order={this.state.order}\n                                                orderBy={this.state.orderBy}\n                                                //onSelectAllClick={this.handleSelectAllClick.bind(this)}\n                                                onRequestSort={this.handleRequestSort.bind(this)}\n                                                rowCount={this.state.dataVoicemail.length}\n                                            />\n                                            <TableBody>\n                                                {stableSort(this.state.dataVoicemail, getComparator(this.state.order, this.state.orderBy))\n                                                    .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n                                                    .map((row, index) => {\n                                                        const isItemSelected = this.isSelected(row.media_id);\n                                                        const labelId = `enhanced-table-checkbox-${index}`;\n                                                        \n                                                        return (\n                                                            <TableRow\n                                                                hover\n                                                                //onClick={(event) => this.handleClick(event, row.media_id)}\n                                                                role=\"checkbox\"\n                                                                aria-checked={isItemSelected}\n                                                                tabIndex={-1}\n                                                                key={row.media_id}\n                                                                selected={isItemSelected}\n                                                            >\n                                                                <TableCell padding=\"checkbox\">\n                                                                    <Checkbox\n                                                                        style={{display:'none'}}\n                                                                        checked={isItemSelected}\n                                                                        inputProps={{ 'aria-labelledby': labelId }}\n                                                                    />\n                                                                </TableCell>\n                                                                <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                                <FormControl className={useStyles.formControl}>\n                                                                    <InputLabel id=\"demo-simple-select-helper-label\">Status</InputLabel>\n                                                                    <Select\n                                                                    labelId=\"demo-simple-select-helper-label\"\n                                                                    id=\"demo-simple-select-helper\"\n                                                                    name={row.media_id}//This is id.\n                                                                    value={row.folder}\n                                                                    selected={row.folder}\n                                                                    onChange={this.handleChangeStatus.bind(this)}\n                                                                    inputProps={this.state.isLoading?{ readOnly:  true }:''}\n                                                                    >                                                                    \n                                                                    <MenuItem value={\"new\"}>New</MenuItem>\n                                                                    <MenuItem value={\"deleted\"}>Deleted</MenuItem>\n                                                                    <MenuItem value={\"saved\"}>Saved</MenuItem>\n                                                                    </Select>\n                                                                    <FormHelperText>{this.state.messageResult}</FormHelperText>\n                                                                </FormControl>\n                                                                    \n                                                                    \n                                                                </TableCell>\n                                                                <TableCell align=\"right\">{row.from}</TableCell>\n                                                                <TableCell align=\"right\">{row.to}</TableCell>\n                                                                <TableCell align=\"right\">{row.duration}</TableCell>                                                                \n                                                            </TableRow>\n                                                        );\n                                                    })}\n                                                {emptyRows > 0 && (\n                                                    <TableRow style={{ height: (this.state.dense ? 33 : 53) * emptyRows }}>\n                                                        <TableCell colSpan={6} />\n                                                    </TableRow>\n                                                )}\n                                            </TableBody>\n                                        </Table>\n                                    </TableContainer>\n                                    <TablePagination\n                                        rowsPerPageOptions={[5, 10, 25]}\n                                        component=\"div\"\n                                        count={this.state.dataVoicemail.length}\n                                        rowsPerPage={this.state.rowsPerPage}\n                                        page={this.state.page}\n                                        onChangePage={this.handleChangePage}\n                                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                                    />\n                                </Paper>\n                                <FormControlLabel\n                                    control={<Switch checked={this.state.dense} onChange={this.handleChangeDense} />}\n                                    label=\"Dense padding\"\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <ToastContainer/>\n                </div>\n            </>\n        )\n    }\n}\n","import React from 'react';\nimport Tablemail from './TableMail/tablemail';\nimport './App.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n      <Tablemail/>\n      </Container>\n    </React.Fragment>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}